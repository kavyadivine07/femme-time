<%- include("../../views/partials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
     .error-message {
       color: red;
   }

   .thumbnails-container {
       display: flex;
       flex-wrap: wrap;
       padding: 10px;
       min-height: 70px;
       background-color: #f8f9fa;
       border-radius: 4px;
   }

   .thumbnail {
       position: relative;
       margin-right: 10px;
       margin-bottom: 10px;
       border: 1px solid #ddd;
       padding: 3px;
       border-radius: 4px;
   }

   .thumbnail img {
       display: block;
       width: 60px;
       height: 60px;
       object-fit: cover;
   }

   .remove-icon {
       position: absolute;
       top: -10px;
       right: -10px;
       background-color: red;
       color: white;
       border-radius: 50%;
       width: 20px;
       height: 20px;
       text-align: center;
       line-height: 18px;
       font-size: 12px;
       cursor: pointer;
       box-shadow: 0 0 3px rgba(0,0,0,0.3);
   }

   .image-cropper {
       background-color: #f8f9fa;
       border: 1px solid #ddd;
       padding: 15px;
       border-radius: 4px;
       margin: 0 15px 15px 15px;
   }

   /* Show the preview image when it has a source */
   #imgView1:not([src=""]), #imgView2:not([src=""]), #imgView3:not([src=""]), #imgView4:not([src=""]) {
       display: block !important;
       margin-bottom: 10px;
   }
</style>
<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName"
                                class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                                <option value="">-- Select Brand --</option>
                                <% brand.forEach(br => { %>
                                  <option value="<%= br._id %>"><%= br.brandName %></option>
                                <% }) %>
                              </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border"
                                rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                       
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" class="form-control border">
                                </div>
                                <div id="color-error" class="error-message"></div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <option value="">-- Select Category --</option>
                                            <% cat.forEach(ct => { %>
                                              <option value="<%= ct._id %>"><%= ct.name %></option>
                                            <% }) %>
                                          </select>
                                          
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <div class="border row mb-3">
                                <div id="addedImagesContainer" class="thumbnails-container p-3"></div>
                            </div>
                            
                            <!-- Image 1 -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <h5>Image 1 (Required)</h5>
                                    <img src="" alt="" id="imgView1" style="max-width: 100%; max-height: 300px; display: none;">
                                    <input class="form-control" type="file" name="images" id="input1"
                                        accept="image/png, image/jpeg, image/jpg">
                                    <div id="images-error" class="error-message"></div>
                                </div>
                                <div class="image-cropper d-flex flex-column align-items-center"
                                    style="display:none; width: 100%; margin-bottom: 20px;">
                                    <div style="width: 100%; max-width: 500px; margin-bottom: 10px;">
                                        <img src="" id="croppedImg1" alt="" style="max-width: 100%; max-height: 500px;">
                                    </div>
                                    <div class="d-flex">
                                        <button type="button" id="saveButton1" class="btn btn-sm btn-primary me-2">Save Crop</button>
                                        <button type="button" id="cancelButton1" class="btn btn-sm btn-danger">Cancel</button>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Image 2 -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <h5>Image 2 (Required)</h5>
                                    <img src="" alt="" id="imgView2" style="max-width: 100%; max-height: 500px; display: none;">
                                    <input class="form-control" type="file" name="images" id="input2"
                                        accept="image/png, image/jpeg, image/jpg">
                                </div>
                                <div class="image-cropper d-flex flex-column align-items-center"
                                    style="display:none; width: 100%; margin-bottom: 20px;">
                                    <div style="width: 100%; max-width: 500px; margin-bottom: 10px;">
                                        <img src="" id="croppedImg2" alt="" style="max-width: 100%; max-height: 500px;">
                                    </div>
                                    <div class="d-flex">
                                        <button type="button" id="saveButton2" class="btn btn-sm btn-primary me-2">Save Crop</button>
                                        <button type="button" id="cancelButton2" class="btn btn-sm btn-danger">Cancel</button>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Image 3 -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <h5>Image 3 (Required)</h5>
                                    <img src="" alt="" id="imgView3" style="max-width: 100%; max-height: 500px; display: none;">
                                    <input class="form-control" type="file" name="images" id="input3"
                                        accept="image/png, image/jpeg, image/jpg">
                                </div>
                                <div class="image-cropper d-flex flex-column align-items-center"
                                    style="display:none; width: 100%; margin-bottom: 20px;">
                                    <div style="width: 100%; max-width: 500px; margin-bottom: 10px;">
                                        <img src="" id="croppedImg3" alt="" style="max-width: 100%; max-height: 500px;">
                                    </div>
                                    <div class="d-flex">
                                        <button type="button" id="saveButton3" class="btn btn-sm btn-primary me-2">Save Crop</button>
                                        <button type="button" id="cancelButton3" class="btn btn-sm btn-danger">Cancel</button>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Image 4 -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <h5>Image 4 (Required)</h5>
                                    <img src="" alt="" id="imgView4" style="max-width: 100%; max-height: 500px; display: none;">
                                    <input class="form-control" type="file" name="images" id="input4"
                                        accept="image/png, image/jpeg, image/jpg">
                                </div>
                                <div class="image-cropper d-flex flex-column align-items-center"
                                    style="display:none; width: 100%; margin-bottom: 20px;">
                                    <div style="width: 100%; max-width: 500px; margin-bottom: 10px;">
                                        <img src="" id="croppedImg4" alt="" style="max-width: 100%; max-height: 500px;">
                                    </div>
                                    <div class="d-flex">
                                        <button type="button" id="saveButton4" class="btn btn-sm btn-primary me-2">Save Crop</button>
                                        <button type="button" id="cancelButton4" class="btn btn-sm btn-danger">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                                    

                            <!-- Size Variants Section -->
                            <h4 class="mt-4">Size Variants</h4>
                            <div id="sizeVariants">
                                <div class="size-variant-row">
                                <div class="row">
                                    <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Size</label>
                                        <select class="form-control" name="size" required>
                                        <option value="XS">XS</option>
                                        <option value="S">S</option>
                                        <option value="M">M</option>
                                        <option value="L">L</option>
                                        <option value="XL">XL</option>
                                        <option value="XXL">XXL</option>
                                        </select>
                                    </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Regular price</label>
                                                <input placeholder="$" name="regularPrice" type="text"
                                                    class="form-control border">
                                                <div id="regularPrice-error" class="error-message"></div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Sale price</label>
                                                <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                            </div>
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Quantity</label>
                                                <input placeholder="" name="quantity" type="text" class="form-control border">
                                                <div id="quantity-error" class="error-message"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                    <div class="form-group">
                                        <label>&nbsp;</label>
                                        <button type="button" class="btn btn-success btn-sm add-more-size">+</button>
                                    </div>
                                    </div>
                                </div>
                                </div>
                            </div>
  
                        
                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit()">Publish</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

     
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>
function validateAndSubmit() {
    if (validateForm()) {
        document.forms[0].submit();
    }
}

// Basic image preview functions
function viewImage1(event) { viewImage(event, 1); }
function viewImage2(event) { viewImage(event, 2); }
function viewImage3(event) { viewImage(event, 3); }
function viewImage4(event) { viewImage(event, 4); }

// Store cropper instances
const cropperInstances = {};

// Enhanced image view and crop function
function viewImage(event, index) {
    const input = event.target;
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function() {
            const dataURL = reader.result;
            const image = document.getElementById("imgView" + index);
            image.src = dataURL;
            
            if (cropperInstances[index]) {
                cropperInstances[index].destroy();
            }
            
            cropperInstances[index] = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 0.8,
                zoomable: true
            });
            
            const cropperContainer = document.querySelector(".image-cropper:nth-of-type(" + index + ")");
            cropperContainer.style.display = 'block';
            
            const saveButton = document.getElementById("saveButton" + index);
            saveButton.onclick = function() {
                const cropper = cropperInstances[index];
                if (cropper) {
                    const croppedCanvas = cropper.getCroppedCanvas({ width: 440, height: 440 });
                    const croppedImage = document.getElementById("croppedImg" + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 0.9);
                    
                    croppedCanvas.toBlob(function(blob) {
                        const timestamp = new Date().getTime();
                        const fileName = `cropped-img-${timestamp}-${index}.jpg`;
                        const imgFile = new File([blob], fileName, { type: 'image/jpeg' });
                        
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(imgFile);
                        input.files = dataTransfer.files;
                        addThumbnail(imgFile, index);
                    }, 'image/jpeg', 0.9);
                    
                    cropperContainer.style.display = 'none';
                    image.src = croppedImage.src;
                    cropper.destroy();
                    cropperInstances[index] = null;
                }
            };
            
            const cancelButton = document.getElementById("cancelButton" + index);
            if (cancelButton) {
                cancelButton.onclick = function() {
                    input.value = '';
                    image.src = '';
                    if (cropperInstances[index]) {
                        cropperInstances[index].destroy();
                        cropperInstances[index] = null;
                    }
                    cropperContainer.style.display = 'none';
                    removeThumbnail(index);
                };
            }
        };
        
        reader.readAsDataURL(input.files[0]);
    }
}

// Store selected images with their indices
const selectedImages = {};

// Add thumbnail function
function addThumbnail(file, index) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    removeThumbnail(index);
    selectedImages[index] = file;
    
    const thumbnail = document.createElement("div");
    thumbnail.classList.add("thumbnail");
    thumbnail.dataset.index = index;
    
    const img = document.createElement("img");
    img.src = URL.createObjectURL(file);
    img.alt = "thumbnail";
    img.style.width = "50px";
    img.style.height = "50px";
    img.style.objectFit = "cover";
    
    const removeIcon = document.createElement("span");
    removeIcon.className = "remove-icon";
    removeIcon.innerHTML = "×";
    removeIcon.style.cursor = "pointer";
    removeIcon.style.color = "red";
    removeIcon.style.fontSize = "20px";
    removeIcon.style.position = "absolute";
    removeIcon.style.top = "0";
    removeIcon.style.right = "0";
    
    thumbnail.style.position = "relative";
    thumbnail.style.display = "inline-block";
    thumbnail.style.marginRight = "10px";
    
    removeIcon.addEventListener("click", function() {
        const input = document.getElementById("input" + index);
        if (input) input.value = '';
        const image = document.getElementById("imgView" + index);
        if (image) image.src = '';
        removeThumbnail(index);
    });
    
    thumbnail.appendChild(img);
    thumbnail.appendChild(removeIcon);
    addedImagesContainer.appendChild(thumbnail);
}

// Remove thumbnail function
function removeThumbnail(index) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    const existingThumbnail = addedImagesContainer.querySelector(`.thumbnail[data-index="${index}"]`);
    if (existingThumbnail) existingThumbnail.remove();
    if (selectedImages[index]) delete selectedImages[index];
}

// Handle dynamic size variants
document.addEventListener("DOMContentLoaded", function() {
    const sizeVariantsContainer = document.getElementById("sizeVariants");
    if (!sizeVariantsContainer) {
        console.error("Size variants container not found!");
        return;
    }

    // Add event listeners for file inputs
    for (let i = 1; i <= 4; i++) {
        const input = document.getElementById("input" + i);
        if (input) {
            input.addEventListener("change", function(event) {
                if (event.target.files && event.target.files[0]) {
                    viewImage(event, i);
                }
            });
        }
    }

    // Add event listener for add/remove size buttons
    sizeVariantsContainer.addEventListener("click", function(event) {
        if (event.target.classList.contains("add-more-size")) {
            addSizeVariantRow();
        } else if (event.target.classList.contains("remove-size")) {
            const row = event.target.closest(".size-variant-row");
            if (row) {
                removeSizeVariantRow(row);
            } else {
                console.error("Parent .size-variant-row not found for remove-size button");
            }
        }
    });

    // Function to add a new size variant row
    function addSizeVariantRow() {
        const newRow = document.createElement("div");
        newRow.classList.add("size-variant-row");
        newRow.innerHTML = `
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Size</label>
                        <select class="form-control" name="size" required>
                            <option value="XS">XS</option>
                            <option value="S">S</option>
                            <option value="M">M</option>
                            <option value="L">L</option>
                            <option value="XL">XL</option>
                            <option value="XXL">XXL</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Regular price</label>
                                <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                <div class="error-message"></div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Sale price</label>
                                <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                <div class="error-message"></div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Quantity</label>
                                <input placeholder="" name="quantity" type="text" class="form-control border">
                                <div class="error-message"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group">
                        <label> </label>
                        <button type="button" class="btn btn-danger btn-sm remove-size">−</button>
                    </div>
                </div>
            </div>
        `;
        sizeVariantsContainer.appendChild(newRow);
    }

    // Function to remove a size variant row
    function removeSizeVariantRow(row) {
        try {
            const rows = sizeVariantsContainer.querySelectorAll(".size-variant-row");
            if (rows.length > 1) {
                row.remove();
            } else {
                alert("At least one size variant is required.");
            }
        } catch (error) {
            console.error("Error removing size variant row:", error);
        }
    }
});

function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const brand = document.getElementsByName('brand')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementsByName('category')[0].value;
    
    let isValid = true;

    // Validate product name
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
        isValid = false;
    }

    // Validate description
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
        displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
        isValid = false;
    }

    // Validate brand
    if (!brand) {
        displayErrorMessage('brand-error', 'Please select a brand.');
        isValid = false;
    }

    // Validate category
    if (!category) {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
    }

    // Validate color
    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }

    // Validate images
    let hasImages = false;
    for (let i = 1; i <= 4; i++) {
        const input = document.getElementById("input" + i);
        if (input && input.files && input.files.length > 0) {
            hasImages = true;
            break;
        }
    }
    if (!hasImages) {
        displayErrorMessage("images-error", 'Please select at least one image.');
        isValid = false;
    }

    // Validate size variants
    const sizeVariants = document.querySelectorAll(".size-variant-row");
    sizeVariants.forEach((row, index) => {
        const regularPrice = row.querySelector("input[name='regularPrice']").value;
        const salePrice = row.querySelector("input[name='salePrice']").value;
        const quantity = row.querySelector("input[name='quantity']").value;

        if (!regularPrice || !/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) < 0) {
            displayErrorMessageInRow(row, 'regularPrice', 'Please enter a valid non-negative price.');
            isValid = false;
        }

        if (salePrice && (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0)) {
            displayErrorMessageInRow(row, 'salePrice', 'Please enter a valid non-negative price.');
            isValid = false;
        }

        if (salePrice && regularPrice && parseFloat(regularPrice) <= parseFloat(salePrice)) {
            displayErrorMessageInRow(row, 'regularPrice', 'Regular price must be greater than sale price.');
            isValid = false;
        }

        if (!quantity || parseInt(quantity) < 0) {
            displayErrorMessageInRow(row, 'quantity', 'Please enter a valid non-negative quantity.');
            isValid = false;
        }
    });

    return isValid;
}

function displayErrorMessageInRow(row, field, message) {
    const errorElement = row.querySelector(`input[name="${field}"]`).nextElementSibling;
    if (errorElement && errorElement.classList.contains('error-message')) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = 'none';
    });
}
</script>
<%- include("../../views/partials/admin/footer") %>
