<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <style>
        .table-responsive { max-height: 600px; }
        .action-btns { display: flex; gap: 5px; flex-wrap: wrap; }
        @media (max-width: 768px) {
            .input-group { width: 100% !important; margin-left: 0 !important; }
            .action-btns { flex-direction: column; }
            .table th, .table td { font-size: 0.9rem; }
        }
    </style>
</head>
<body>
<div class="container-fluid py-4">
    <div class="content-header mb-4">
        <h2 class="content-title">Products</h2>
    </div>

    <!-- Search Bar -->
    <form action="/admin/products" method="get" class="mb-4">
        <div class="input-group input-group-sm border rounded-pill" style="max-width: 500px;">
            <input type="text" class="form-control border-0 rounded-pill" placeholder="Search products or brands" name="search" value="<%= search || '' %>">
            <button class="btn border-0" type="submit">Search</button>
        </div>
    </form>

    <!-- Add Product Button -->
    <div class="mb-3">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">Add Product</button>
    </div>

    <!-- Product Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Brand</th>
                    <th>Category</th>
                    <th>Sale Price</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Quantity</th>
                    <th>Action</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(product => { %>
                    <tr>
                        <td><%= product.productName %></td>
                        <td><%= product.brand %></td>
                        <td><%= product.category ? product.category.name : 'N/A' %></td>
                        <td><%= product.salePrice %></td>
                        <td><%= product.salePrice - (product.salePrice * product.productOffer / 100) %></td>
                        <td><%= product.productOffer %>%</td>
                        <td><%= product.quantity %></td>
                        <td class="action-btns">
                            <% if (product.isBlocked) { %>
                                <button class="btn btn-success btn-sm" onclick="toggleBlock('<%= product._id %>', false)">Unblock</button>
                            <% else { %>
                                <button class="btn btn-danger btn-sm" onclick="toggleBlock('<%= product._id %>', true)">Block</button>
                            <% } %>
                            <button class="btn btn-info btn-sm" onclick="addOffer('<%= product._id %>')">Add Offer</button>
                            <button class="btn btn-warning btn-sm" onclick="removeOffer('<%= product._id %>')">Remove Offer</button>
                        </td>
                        <td>
                            <button class="btn btn-info btn-sm" onclick="editProduct('<%= product._id %>', '<%= JSON.stringify(product) %>')">Edit</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addProductForm">
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="productName" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="brand" class="form-label">Brand</label>
                        <input type="text" class="form-control" id="brand" name="brand" required>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-control" id="category" name="category" required>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="regularPrice" class="form-label">Regular Price</label>
                        <input type="number" class="form-control" id="regularPrice" name="regularPrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="salePrice" class="form-label">Sale Price</label>
                        <input type="number" class="form-control" id="salePrice" name="salePrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="quantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="quantity" name="quantity" required>
                    </div>
                    <div class="mb-3">
                        <label for="color" class="form-label">Color</label>
                        <input type="text" class="form-control" id="color" name="color" required>
                    </div>
                    <div class="mb-3">
                        <label for="productImage" class="form-label">Product Image URL</label>
                        <input type="text" class="form-control" id="productImage" name="productImage" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Product</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProductForm">
                    <input type="hidden" id="editProductId" name="productId">
                    <div class="mb-3">
                        <label for="editProductName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="editProductName" name="productName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editDescription" name="description" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editBrand" class="form-label">Brand</label>
                        <input type="text" class="form-control" id="editBrand" name="brand" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCategory" class="form-label">Category</label>
                        <select class="form-control" id="editCategory" name="category" required>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editRegularPrice" class="form-label">Regular Price</label>
                        <input type="number" class="form-control" id="editRegularPrice" name="regularPrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="editSalePrice" class="form-label">Sale Price</label>
                        <input type="number" class="form-control" id="editSalePrice" name="salePrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="editQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="editQuantity" name="quantity" required>
                    </div>
                    <div class="mb-3">
                        <label for="editColor" class="form-label">Color</label>
                        <input type="text" class="form-control" id="editColor" name="color" required>
                    </div>
                    <div class="mb-3">
                        <label for="editProductImage" class="form-label">Product Image URL</label>
                        <input type="text" class="form-control" id="editProductImage" name="productImage" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
    // Add Product
    $('#addProductForm').submit(function(e) {
        e.preventDefault();
        $.ajax({
            url: '/admin/products',
            method: 'POST',
            data: $(this).serialize(),
            success: function(response) {
                Swal.fire('Success', 'Product added successfully!', 'success').then(() => location.reload());
            },
            error: function(err) {
                Swal.fire('Error', 'Failed to add product.', 'error');
            }
        });
    });

    // Edit Product
    function editProduct(id, productData) {
        const product = JSON.parse(productData);
        $('#editProductId').val(id);
        $('#editProductName').val(product.productName);
        $('#editDescription').val(product.description);
        $('#editBrand').val(product.brand);
        $('#editCategory').val(product.category._id || product.category);
        $('#editRegularPrice').val(product.regularPrice);
        $('#editSalePrice').val(product.salePrice);
        $('#editQuantity').val(product.quantity);
        $('#editColor').val(product.color);
        $('#editProductImage').val(product.productImage);
        $('#editProductModal').modal('show');
    }

    $('#editProductForm').submit(function(e) {
        e.preventDefault();
        const productId = $('#editProductId').val();
        $.ajax({
            url: `/admin/products/${productId}`,
            method: 'PUT',
            data: $(this).serialize(),
            success: function(response) {
                Swal.fire('Success', 'Product updated successfully!', 'success').then(() => location.reload());
            },
            error: function(err) {
                Swal.fire('Error', 'Failed to update product.', 'error');
            }
        });
    });

    // Toggle Block (Soft Delete)
    function toggleBlock(id, block) {
        Swal.fire({
            title: `Are you sure you want to ${block ? 'block' : 'unblock'} this product?`,
            showCancelButton: true,
            confirmButtonText: 'Yes',
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/admin/products/${id}/block`,
                    method: 'PATCH',
                    data: { isBlocked: block },
                    success: function(response) {
                        Swal.fire('Success', `Product ${block ? 'blocked' : 'unblocked'} successfully!`, 'success').then(() => location.reload());
                    },
                    error: function(err) {
                        Swal.fire('Error', 'Failed to update product status.', 'error');
                    }
                });
            }
        });
    }

    // Add Offer
    function addOffer(id) {
        Swal.fire({
            title: 'Add Offer',
            input: 'number',
            inputLabel: 'Enter offer percentage',
            inputAttributes: { min: 0, max: 100 },
            showCancelButton: true,
            confirmButtonText: 'Add',
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/admin/products/${id}/offer`,
                    method: 'PATCH',
                    data: { productOffer: result.value },
                    success: function(response) {
                        Swal.fire('Success', 'Offer added successfully!', 'success').then(() => location.reload());
                    },
                    error: function(err) {
                        Swal.fire('Error', 'Failed to add offer.', 'error');
                    }
                });
            }
        });
    }

    // Remove Offer
    function removeOffer(id) {
        Swal.fire({
            title: 'Are you sure you want to remove the offer?',
            showCancelButton: true,
            confirmButtonText: 'Yes',
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/admin/products/${id}/offer`,
                    method: 'PATCH',
                    data: { productOffer: 0 },
                    success: function(response) {
                        Swal.fire('Success', 'Offer removed successfully!', 'success').then(() => location.reload());
                    },
                    error: function(err) {
                        Swal.fire('Error', 'Failed to remove offer.', 'error');
                    }
                });
            }
        });
    }
</script>
<%- include("../../views/partials/admin/footer") %>
</body>